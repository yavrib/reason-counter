// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var Pervasives  = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Counter");

function handleClick(_, _self) {
  console.log(_self);
  return /* () */0;
}

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      return React.createElement("div", undefined, React.createElement("div", {
                      onClick: Curry._1(self[/* handle */0], handleClick)
                    }, Pervasives.string_of_int(self[/* state */2][/* count */0])), React.createElement("button", {
                      onClick: (function () {
                          return Curry._1(self[/* send */4], /* INCREASE */0);
                        })
                    }, "Increase"), React.createElement("button", {
                      onClick: (function () {
                          return Curry._1(self[/* send */4], /* DECREASE */1);
                        })
                    }, "Decrease"));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* count */0];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (action !== 0) {
        return /* Update */Block.__(0, [/* record */[/* count */state[/* count */0] - 1 | 0]]);
      } else {
        return /* Update */Block.__(0, [/* record */[/* count */state[/* count */0] + 1 | 0]]);
      }
    });
  return newrecord;
}

exports.component   = component;
exports.handleClick = handleClick;
exports.make        = make;
/* component Not a pure module */
